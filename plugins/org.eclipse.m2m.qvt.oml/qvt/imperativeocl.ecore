<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="imperativeocl"
    nsURI="http:///imperativeocl.ecore" nsPrefix="imperativeocl">
  <eClassifiers xsi:type="ecore:EClass" name="AssignExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" upperBound="-1"
        eType="ecore:EClass essentialocl.ecore#//OclExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="defaultValue" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReset" eType="ecore:EDataType emof.ecore#//Boolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BlockExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" upperBound="-1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SwitchExp" eSuperTypes="essentialocl.ecore#//CallExp #//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="alternativePart" upperBound="-1"
        eType="#//AltExp" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elsePart" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VariableInitExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="referredVariable" lowerBound="1"
        eType="ecore:EClass essentialocl.ecore#//Variable" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="withResult" eType="ecore:EDataType emof.ecore#//Boolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WhileExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
        eType="ecore:EClass essentialocl.ecore#//OclExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ComputeExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnedElement" lowerBound="1"
        eType="ecore:EClass essentialocl.ecore#//Variable" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AltExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
        eType="ecore:EClass essentialocl.ecore#//OclExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UnlinkExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="ecore:EClass essentialocl.ecore#//OclExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="item" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReturnExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BreakExp" eSuperTypes="#//ImperativeExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="TryExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="tryBody" lowerBound="1"
        eType="ecore:EClass essentialocl.ecore#//OclExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="exception" upperBound="-1"
        eType="ecore:EClass emof.ecore#//Type"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="exceptBody" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RaiseExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="exception" lowerBound="1"
        eType="ecore:EClass emof.ecore#//Type"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContinueExp" eSuperTypes="#//ImperativeExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ForExp" eSuperTypes="#//ImperativeLoopExp"/>
  <eClassifiers xsi:type="ecore:EClass" name="TupleExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1"
        upperBound="-1" eType="ecore:EClass essentialocl.ecore#//OclExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Typedef" eSuperTypes="emof.ecore#//Class">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base" lowerBound="1" eType="ecore:EClass emof.ecore#//Type"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InstantiationExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="instantiatedClass" lowerBound="1"
        eType="ecore:EClass emof.ecore#//Class"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="extent" eType="ecore:EClass essentialocl.ecore#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
        eType="ecore:EClass essentialocl.ecore#//OclExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DictionaryType" eSuperTypes="essentialocl.ecore#//CollectionType">
    <eStructuralFeatures xsi:type="ecore:EReference" name="keyType" eType="ecore:EClass emof.ecore#//Type"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DictLiteralExp" eSuperTypes="essentialocl.ecore#//LiteralExp">
    <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1" eType="#//DictLiteralPart"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DictLiteralPart" eSuperTypes="emof.ecore#//Element">
    <eStructuralFeatures xsi:type="ecore:EReference" name="key" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TemplateParameterType" eSuperTypes="emof.ecore#//Type">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="specification" eType="ecore:EDataType emof.ecore#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LogExp" eSuperTypes="essentialocl.ecore#//OperationCallExp #//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AssertExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="severity" eType="#//SeverityKind"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="#//LogExp"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="assertion" lowerBound="1"
        eType="ecore:EClass essentialocl.ecore#//OclExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="SeverityKind">
    <eLiterals name="error"/>
    <eLiterals name="warning" value="1"/>
    <eLiterals name="fatal" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ImperativeLoopExp" abstract="true" eSuperTypes="essentialocl.ecore#//LoopExp #//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ImperativeIterateExp" eSuperTypes="#//ImperativeLoopExp">
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="ecore:EClass essentialocl.ecore#//Variable"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ImperativeExpression" abstract="true"
      eSuperTypes="essentialocl.ecore#//OclExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="UnpackExp" eSuperTypes="#//ImperativeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
        upperBound="-1" eType="ecore:EClass essentialocl.ecore#//Variable" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnonymousTupleType" eSuperTypes="emof.ecore#//Class">
    <eStructuralFeatures xsi:type="ecore:EReference" name="elementType" upperBound="-1"
        eType="ecore:EClass emof.ecore#//Type"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnonymousTupleLiteralExp" eSuperTypes="essentialocl.ecore#//LiteralExp">
    <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1" eType="#//AnonymousTupleLiteralPart"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnonymousTupleLiteralPart" eSuperTypes="emof.ecore#//Element">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="ecore:EClass essentialocl.ecore#//OclExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ListType" eSuperTypes="essentialocl.ecore#//CollectionType"/>
</ecore:EPackage>
