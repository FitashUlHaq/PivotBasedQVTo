/*
* generated by Xtext
*/
package org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.qvto.examples.xtext.qvtoperational.services.QVTOperationalGrammarAccess;

public class QVTOperationalParser extends AbstractContentAssistParser {
	
	@Inject
	private QVTOperationalGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser createParser() {
		org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser result = new org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getImportCSAccess().getAlternatives(), "rule__ImportCS__Alternatives");
					put(grammarAccess.getImportCSAccess().getAlternatives_1_3(), "rule__ImportCS__Alternatives_1_3");
					put(grammarAccess.getUnitPacakgeCSAccess().getAlternatives(), "rule__UnitPacakgeCS__Alternatives");
					put(grammarAccess.getMetamodelCSAccess().getAlternatives_3(), "rule__MetamodelCS__Alternatives_3");
					put(grammarAccess.getClassifierCSAccess().getAlternatives_0(), "rule__ClassifierCS__Alternatives_0");
					put(grammarAccess.getDataTypeCSAccess().getAlternatives_0(), "rule__DataTypeCS__Alternatives_0");
					put(grammarAccess.getClassCSAccess().getAlternatives_5_1_0(), "rule__ClassCS__Alternatives_5_1_0");
					put(grammarAccess.getTypedRefCSAccess().getAlternatives(), "rule__TypedRefCS__Alternatives");
					put(grammarAccess.getTagCSAccess().getNameAlternatives_1_0(), "rule__TagCS__NameAlternatives_1_0");
					put(grammarAccess.getTransformationCSAccess().getAlternatives(), "rule__TransformationCS__Alternatives");
					put(grammarAccess.getPackageRefCSAccess().getAlternatives(), "rule__PackageRefCS__Alternatives");
					put(grammarAccess.getMappingOperationCSAccess().getAlternatives(), "rule__MappingOperationCS__Alternatives");
					put(grammarAccess.getImperativeOCLReservedKeywordAccess().getAlternatives(), "rule__ImperativeOCLReservedKeyword__Alternatives");
					put(grammarAccess.getImperativeOCLPrefixOperatorAccess().getAlternatives(), "rule__ImperativeOCLPrefixOperator__Alternatives");
					put(grammarAccess.getImperativeOCLInfixOperatorAccess().getAlternatives(), "rule__ImperativeOCLInfixOperator__Alternatives");
					put(grammarAccess.getTypeLiteralCSAccess().getAlternatives(), "rule__TypeLiteralCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives(), "rule__PrimaryExpCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives_10_2(), "rule__PrimaryExpCS__Alternatives_10_2");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives_10_2_1_2(), "rule__PrimaryExpCS__Alternatives_10_2_1_2");
					put(grammarAccess.getIDAccess().getAlternatives(), "rule__ID__Alternatives");
					put(grammarAccess.getUPPERAccess().getAlternatives(), "rule__UPPER__Alternatives");
					put(grammarAccess.getEssentialOCLReservedKeywordAccess().getAlternatives(), "rule__EssentialOCLReservedKeyword__Alternatives");
					put(grammarAccess.getEssentialOCLUnaryOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLUnaryOperatorCS__NameAlternatives_0");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLInfixOperatorCS__NameAlternatives_0");
					put(grammarAccess.getEssentialOCLNavigationOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLNavigationOperatorCS__NameAlternatives_0");
					put(grammarAccess.getBinaryOperatorCSAccess().getAlternatives(), "rule__BinaryOperatorCS__Alternatives");
					put(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives(), "rule__EssentialOCLUnreservedName__Alternatives");
					put(grammarAccess.getURIFirstPathElementCSAccess().getAlternatives(), "rule__URIFirstPathElementCS__Alternatives");
					put(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives(), "rule__PrimitiveTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives(), "rule__CollectionTypeIdentifier__Alternatives");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAlternatives_0(), "rule__MultiplicityStringCS__StringBoundsAlternatives_0");
					put(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives(), "rule__PrimitiveLiteralExpCS__Alternatives");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives(), "rule__BooleanLiteralExpCS__Alternatives");
					put(grammarAccess.getTypeExpCSAccess().getAlternatives_0(), "rule__TypeExpCS__Alternatives_0");
					put(grammarAccess.getExpCSAccess().getAlternatives(), "rule__ExpCS__Alternatives");
					put(grammarAccess.getExpCSAccess().getAlternatives_0_1_2(), "rule__ExpCS__Alternatives_0_1_2");
					put(grammarAccess.getPrefixedExpCSAccess().getAlternatives(), "rule__PrefixedExpCS__Alternatives");
					put(grammarAccess.getClassifierKindAccess().getAlternatives(), "rule__ClassifierKind__Alternatives");
					put(grammarAccess.getFeatureKeyAccess().getAlternatives(), "rule__FeatureKey__Alternatives");
					put(grammarAccess.getInitOpAccess().getAlternatives(), "rule__InitOp__Alternatives");
					put(grammarAccess.getMetamodelKindAccess().getAlternatives(), "rule__MetamodelKind__Alternatives");
					put(grammarAccess.getDirectionKindCSAccess().getAlternatives(), "rule__DirectionKindCS__Alternatives");
					put(grammarAccess.getTopLevelCSAccess().getGroup(), "rule__TopLevelCS__Group__0");
					put(grammarAccess.getImportCSAccess().getGroup_0(), "rule__ImportCS__Group_0__0");
					put(grammarAccess.getImportCSAccess().getGroup_1(), "rule__ImportCS__Group_1__0");
					put(grammarAccess.getImportCSAccess().getGroup_1_3_0(), "rule__ImportCS__Group_1_3_0__0");
					put(grammarAccess.getImportCSAccess().getGroup_1_3_0_1(), "rule__ImportCS__Group_1_3_0_1__0");
					put(grammarAccess.getUnitCSAccess().getGroup(), "rule__UnitCS__Group__0");
					put(grammarAccess.getUnitCSAccess().getGroup_1(), "rule__UnitCS__Group_1__0");
					put(grammarAccess.getSimpleSignatureCSAccess().getGroup(), "rule__SimpleSignatureCS__Group__0");
					put(grammarAccess.getSimpleSignatureCSAccess().getGroup_2(), "rule__SimpleSignatureCS__Group_2__0");
					put(grammarAccess.getSimpleSignatureCSAccess().getGroup_2_1(), "rule__SimpleSignatureCS__Group_2_1__0");
					put(grammarAccess.getParameterDeclarationCSAccess().getGroup(), "rule__ParameterDeclarationCS__Group__0");
					put(grammarAccess.getParameterDeclarationCSAccess().getGroup_2(), "rule__ParameterDeclarationCS__Group_2__0");
					put(grammarAccess.getOperationSimpleSignatureCSAccess().getGroup(), "rule__OperationSimpleSignatureCS__Group__0");
					put(grammarAccess.getOperationSimpleSignatureCSAccess().getGroup_2(), "rule__OperationSimpleSignatureCS__Group_2__0");
					put(grammarAccess.getOperationSimpleSignatureCSAccess().getGroup_2_1(), "rule__OperationSimpleSignatureCS__Group_2_1__0");
					put(grammarAccess.getOperationParameterDeclarationCSAccess().getGroup(), "rule__OperationParameterDeclarationCS__Group__0");
					put(grammarAccess.getOperationParameterDeclarationCSAccess().getGroup_2(), "rule__OperationParameterDeclarationCS__Group_2__0");
					put(grammarAccess.getInitPartCSAccess().getGroup(), "rule__InitPartCS__Group__0");
					put(grammarAccess.getMetamodelCSAccess().getGroup(), "rule__MetamodelCS__Group__0");
					put(grammarAccess.getClassifierCSAccess().getGroup(), "rule__ClassifierCS__Group__0");
					put(grammarAccess.getDataTypeCSAccess().getGroup(), "rule__DataTypeCS__Group__0");
					put(grammarAccess.getDataTypeCSAccess().getGroup_0_1(), "rule__DataTypeCS__Group_0_1__0");
					put(grammarAccess.getExceptionCSAccess().getGroup(), "rule__ExceptionCS__Group__0");
					put(grammarAccess.getExceptionCSAccess().getGroup_2(), "rule__ExceptionCS__Group_2__0");
					put(grammarAccess.getExceptionCSAccess().getGroup_2_1(), "rule__ExceptionCS__Group_2_1__0");
					put(grammarAccess.getExceptionCSAccess().getGroup_2_1_1(), "rule__ExceptionCS__Group_2_1_1__0");
					put(grammarAccess.getClassCSAccess().getGroup(), "rule__ClassCS__Group__0");
					put(grammarAccess.getClassCSAccess().getGroup_4(), "rule__ClassCS__Group_4__0");
					put(grammarAccess.getClassCSAccess().getGroup_4_1(), "rule__ClassCS__Group_4_1__0");
					put(grammarAccess.getClassCSAccess().getGroup_4_1_1(), "rule__ClassCS__Group_4_1_1__0");
					put(grammarAccess.getClassCSAccess().getGroup_5(), "rule__ClassCS__Group_5__0");
					put(grammarAccess.getClassCSAccess().getGroup_5_1(), "rule__ClassCS__Group_5_1__0");
					put(grammarAccess.getTypedMultiplicityRefCSAccess().getGroup(), "rule__TypedMultiplicityRefCS__Group__0");
					put(grammarAccess.getClassifierPropertyCSAccess().getGroup(), "rule__ClassifierPropertyCS__Group__0");
					put(grammarAccess.getClassifierPropertyCSAccess().getGroup_6(), "rule__ClassifierPropertyCS__Group_6__0");
					put(grammarAccess.getStereotypeQualifierCSAccess().getGroup(), "rule__StereotypeQualifierCS__Group__0");
					put(grammarAccess.getStereotypeQualifierCSAccess().getGroup_1(), "rule__StereotypeQualifierCS__Group_1__0");
					put(grammarAccess.getStereotypeQualifierCSAccess().getGroup_1_1(), "rule__StereotypeQualifierCS__Group_1_1__0");
					put(grammarAccess.getMultiplicityCSAccess().getGroup(), "rule__MultiplicityCS__Group__0");
					put(grammarAccess.getMultiplicityCSAccess().getGroup_1(), "rule__MultiplicityCS__Group_1__0");
					put(grammarAccess.getClassifierOperationCSAccess().getGroup(), "rule__ClassifierOperationCS__Group__0");
					put(grammarAccess.getClassifierOperationCSAccess().getGroup_4(), "rule__ClassifierOperationCS__Group_4__0");
					put(grammarAccess.getClassifierOperationCSAccess().getGroup_4_1(), "rule__ClassifierOperationCS__Group_4_1__0");
					put(grammarAccess.getClassifierOperationCSAccess().getGroup_6(), "rule__ClassifierOperationCS__Group_6__0");
					put(grammarAccess.getEnumerationCSAccess().getGroup(), "rule__EnumerationCS__Group__0");
					put(grammarAccess.getEnumerationCSAccess().getGroup_2(), "rule__EnumerationCS__Group_2__0");
					put(grammarAccess.getEnumerationCSAccess().getGroup_2_1(), "rule__EnumerationCS__Group_2_1__0");
					put(grammarAccess.getEnumerationCSAccess().getGroup_2_1_1(), "rule__EnumerationCS__Group_2_1_1__0");
					put(grammarAccess.getTagCSAccess().getGroup(), "rule__TagCS__Group__0");
					put(grammarAccess.getTagCSAccess().getGroup_3(), "rule__TagCS__Group_3__0");
					put(grammarAccess.getTransformationDeclCSAccess().getGroup(), "rule__TransformationDeclCS__Group__0");
					put(grammarAccess.getTransformationDefCSAccess().getGroup(), "rule__TransformationDefCS__Group__0");
					put(grammarAccess.getTransformationHeaderCSAccess().getGroup(), "rule__TransformationHeaderCS__Group__0");
					put(grammarAccess.getModelTypeCSAccess().getGroup(), "rule__ModelTypeCS__Group__0");
					put(grammarAccess.getPackageRefCSAccess().getGroup_1(), "rule__PackageRefCS__Group_1__0");
					put(grammarAccess.getMappingDeclarationCSAccess().getGroup(), "rule__MappingDeclarationCS__Group__0");
					put(grammarAccess.getMappingDefinitionCSAccess().getGroup(), "rule__MappingDefinitionCS__Group__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup(), "rule__MappingOperationHeaderCS__Group__0");
					put(grammarAccess.getListTypeCSAccess().getGroup(), "rule__ListTypeCS__Group__0");
					put(grammarAccess.getDictTypeCSAccess().getGroup(), "rule__DictTypeCS__Group__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10(), "rule__PrimaryExpCS__Group_10__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_0(), "rule__PrimaryExpCS__Group_10_2_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_0_3(), "rule__PrimaryExpCS__Group_10_2_0_3__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_0_5(), "rule__PrimaryExpCS__Group_10_2_0_5__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_0_5_2(), "rule__PrimaryExpCS__Group_10_2_0_5_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_0_6(), "rule__PrimaryExpCS__Group_10_2_0_6__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_1(), "rule__PrimaryExpCS__Group_10_2_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_1_2_0(), "rule__PrimaryExpCS__Group_10_2_1_2_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_1_2_0_1(), "rule__PrimaryExpCS__Group_10_2_1_2_0_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_2(), "rule__PrimaryExpCS__Group_10_2_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_2_0(), "rule__PrimaryExpCS__Group_10_2_2_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_2_1(), "rule__PrimaryExpCS__Group_10_2_2_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_2_1_2(), "rule__PrimaryExpCS__Group_10_2_2_1_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_2_1_2_2(), "rule__PrimaryExpCS__Group_10_2_2_1_2_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_10_2_2_1_2_3(), "rule__PrimaryExpCS__Group_10_2_2_1_2_3__0");
					put(grammarAccess.getListLiteralExpCSAccess().getGroup(), "rule__ListLiteralExpCS__Group__0");
					put(grammarAccess.getListLiteralExpCSAccess().getGroup_3(), "rule__ListLiteralExpCS__Group_3__0");
					put(grammarAccess.getListLiteralExpCSAccess().getGroup_3_1(), "rule__ListLiteralExpCS__Group_3_1__0");
					put(grammarAccess.getDictLiteralExpCSAccess().getGroup(), "rule__DictLiteralExpCS__Group__0");
					put(grammarAccess.getDictLiteralExpCSAccess().getGroup_3(), "rule__DictLiteralExpCS__Group_3__0");
					put(grammarAccess.getDictLiteralExpCSAccess().getGroup_3_1(), "rule__DictLiteralExpCS__Group_3_1__0");
					put(grammarAccess.getDictLiteralPartCSAccess().getGroup(), "rule__DictLiteralPartCS__Group__0");
					put(grammarAccess.getReturnExpCSAccess().getGroup(), "rule__ReturnExpCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup(), "rule__PathNameCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup_1(), "rule__PathNameCS__Group_1__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup(), "rule__URIPathNameCS__Group__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup_1(), "rule__URIPathNameCS__Group_1__0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getGroup_1(), "rule__URIFirstPathElementCS__Group_1__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup(), "rule__CollectionTypeCS__Group__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup_1(), "rule__CollectionTypeCS__Group_1__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup(), "rule__MultiplicityBoundsCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup_1(), "rule__MultiplicityBoundsCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup(), "rule__TupleTypeCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1(), "rule__TupleTypeCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1(), "rule__TupleTypeCS__Group_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1(), "rule__TupleTypeCS__Group_1_1_1__0");
					put(grammarAccess.getTuplePartCSAccess().getGroup(), "rule__TuplePartCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup(), "rule__CollectionLiteralExpCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2(), "rule__CollectionLiteralExpCS__Group_2__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2_1(), "rule__CollectionLiteralExpCS__Group_2_1__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup(), "rule__CollectionLiteralPartCS__Group__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_1(), "rule__CollectionLiteralPartCS__Group_1__0");
					put(grammarAccess.getConstructorPartCSAccess().getGroup(), "rule__ConstructorPartCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup(), "rule__TupleLiteralExpCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3(), "rule__TupleLiteralExpCS__Group_3__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup(), "rule__TupleLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1(), "rule__TupleLiteralPartCS__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup(), "rule__UnlimitedNaturalLiteralExpCS__Group__0");
					put(grammarAccess.getInvalidLiteralExpCSAccess().getGroup(), "rule__InvalidLiteralExpCS__Group__0");
					put(grammarAccess.getNullLiteralExpCSAccess().getGroup(), "rule__NullLiteralExpCS__Group__0");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getGroup(), "rule__TypeLiteralWithMultiplicityCS__Group__0");
					put(grammarAccess.getTypeExpCSAccess().getGroup(), "rule__TypeExpCS__Group__0");
					put(grammarAccess.getExpCSAccess().getGroup_0(), "rule__ExpCS__Group_0__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1(), "rule__ExpCS__Group_0_1__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0(), "rule__ExpCS__Group_0_1_2_0__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0_1(), "rule__ExpCS__Group_0_1_2_0_1__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0_2(), "rule__ExpCS__Group_0_1_2_0_2__0");
					put(grammarAccess.getExpCSAccess().getGroup_1(), "rule__ExpCS__Group_1__0");
					put(grammarAccess.getPrefixedExpCSAccess().getGroup_0(), "rule__PrefixedExpCS__Group_0__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup(), "rule__NavigatingArgCS__Group__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1(), "rule__NavigatingArgCS__Group_1__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1_2(), "rule__NavigatingArgCS__Group_1_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup(), "rule__NavigatingBarArgCS__Group__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2(), "rule__NavigatingBarArgCS__Group_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2_2(), "rule__NavigatingBarArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup(), "rule__NavigatingCommaArgCS__Group__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2(), "rule__NavigatingCommaArgCS__Group_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_2(), "rule__NavigatingCommaArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup(), "rule__NavigatingSemiArgCS__Group__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2(), "rule__NavigatingSemiArgCS__Group_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2_2(), "rule__NavigatingSemiArgCS__Group_2_2__0");
					put(grammarAccess.getIfExpCSAccess().getGroup(), "rule__IfExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup(), "rule__LetExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup_2(), "rule__LetExpCS__Group_2__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup(), "rule__LetVariableCS__Group__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup_1(), "rule__LetVariableCS__Group_1__0");
					put(grammarAccess.getNestedExpCSAccess().getGroup(), "rule__NestedExpCS__Group__0");
					put(grammarAccess.getSelfExpCSAccess().getGroup(), "rule__SelfExpCS__Group__0");
					put(grammarAccess.getTopLevelCSAccess().getImportAssignment_0(), "rule__TopLevelCS__ImportAssignment_0");
					put(grammarAccess.getTopLevelCSAccess().getOwnedNestedPackageAssignment_1(), "rule__TopLevelCS__OwnedNestedPackageAssignment_1");
					put(grammarAccess.getTopLevelCSAccess().getOwnedTypeAssignment_2(), "rule__TopLevelCS__OwnedTypeAssignment_2");
					put(grammarAccess.getImportCSAccess().getUnitAssignment_0_1(), "rule__ImportCS__UnitAssignment_0_1");
					put(grammarAccess.getImportCSAccess().getUnitAssignment_1_1(), "rule__ImportCS__UnitAssignment_1_1");
					put(grammarAccess.getImportCSAccess().getImportedUnitElementAssignment_1_3_0_0(), "rule__ImportCS__ImportedUnitElementAssignment_1_3_0_0");
					put(grammarAccess.getImportCSAccess().getImportedUnitElementAssignment_1_3_0_1_1(), "rule__ImportCS__ImportedUnitElementAssignment_1_3_0_1_1");
					put(grammarAccess.getImportCSAccess().getAllAssignment_1_3_1(), "rule__ImportCS__AllAssignment_1_3_1");
					put(grammarAccess.getUnitCSAccess().getSegmentAssignment_0(), "rule__UnitCS__SegmentAssignment_0");
					put(grammarAccess.getUnitCSAccess().getSegmentAssignment_1_1(), "rule__UnitCS__SegmentAssignment_1_1");
					put(grammarAccess.getSimpleSignatureCSAccess().getParameterAssignment_2_0(), "rule__SimpleSignatureCS__ParameterAssignment_2_0");
					put(grammarAccess.getSimpleSignatureCSAccess().getParameterAssignment_2_1_1(), "rule__SimpleSignatureCS__ParameterAssignment_2_1_1");
					put(grammarAccess.getParameterDeclarationCSAccess().getDirectionAssignment_0(), "rule__ParameterDeclarationCS__DirectionAssignment_0");
					put(grammarAccess.getParameterDeclarationCSAccess().getNameAssignment_1(), "rule__ParameterDeclarationCS__NameAssignment_1");
					put(grammarAccess.getParameterDeclarationCSAccess().getOwnedTypeAssignment_2_1(), "rule__ParameterDeclarationCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getParameterDeclarationCSAccess().getInitPartAssignment_3(), "rule__ParameterDeclarationCS__InitPartAssignment_3");
					put(grammarAccess.getOperationSimpleSignatureCSAccess().getParameterAssignment_2_0(), "rule__OperationSimpleSignatureCS__ParameterAssignment_2_0");
					put(grammarAccess.getOperationSimpleSignatureCSAccess().getParameterAssignment_2_1_1(), "rule__OperationSimpleSignatureCS__ParameterAssignment_2_1_1");
					put(grammarAccess.getOperationParameterDeclarationCSAccess().getDirectionAssignment_0(), "rule__OperationParameterDeclarationCS__DirectionAssignment_0");
					put(grammarAccess.getOperationParameterDeclarationCSAccess().getNameAssignment_1(), "rule__OperationParameterDeclarationCS__NameAssignment_1");
					put(grammarAccess.getOperationParameterDeclarationCSAccess().getOwnedTypeAssignment_2_1(), "rule__OperationParameterDeclarationCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getOperationParameterDeclarationCSAccess().getInitPartAssignment_3(), "rule__OperationParameterDeclarationCS__InitPartAssignment_3");
					put(grammarAccess.getInitPartCSAccess().getInitOpAssignment_0(), "rule__InitPartCS__InitOpAssignment_0");
					put(grammarAccess.getInitPartCSAccess().getExpressionAssignment_1(), "rule__InitPartCS__ExpressionAssignment_1");
					put(grammarAccess.getMetamodelCSAccess().getMetamodelKindAssignment_0(), "rule__MetamodelCS__MetamodelKindAssignment_0");
					put(grammarAccess.getMetamodelCSAccess().getNameAssignment_1(), "rule__MetamodelCS__NameAssignment_1");
					put(grammarAccess.getMetamodelCSAccess().getOwnedTypeAssignment_3_0(), "rule__MetamodelCS__OwnedTypeAssignment_3_0");
					put(grammarAccess.getMetamodelCSAccess().getOwnedTypeAssignment_3_1(), "rule__MetamodelCS__OwnedTypeAssignment_3_1");
					put(grammarAccess.getMetamodelCSAccess().getOwnedAnnotationAssignment_3_2(), "rule__MetamodelCS__OwnedAnnotationAssignment_3_2");
					put(grammarAccess.getDataTypeCSAccess().getNameAssignment_1(), "rule__DataTypeCS__NameAssignment_1");
					put(grammarAccess.getExceptionCSAccess().getNameAssignment_1(), "rule__ExceptionCS__NameAssignment_1");
					put(grammarAccess.getExceptionCSAccess().getOwnedSuperTypeAssignment_2_1_0(), "rule__ExceptionCS__OwnedSuperTypeAssignment_2_1_0");
					put(grammarAccess.getExceptionCSAccess().getOwnedSuperTypeAssignment_2_1_1_1(), "rule__ExceptionCS__OwnedSuperTypeAssignment_2_1_1_1");
					put(grammarAccess.getClassCSAccess().getIntermediateAssignment_0(), "rule__ClassCS__IntermediateAssignment_0");
					put(grammarAccess.getClassCSAccess().getQualifierAssignment_1(), "rule__ClassCS__QualifierAssignment_1");
					put(grammarAccess.getClassCSAccess().getNameAssignment_3(), "rule__ClassCS__NameAssignment_3");
					put(grammarAccess.getClassCSAccess().getOwnedSuperTypeAssignment_4_1_0(), "rule__ClassCS__OwnedSuperTypeAssignment_4_1_0");
					put(grammarAccess.getClassCSAccess().getOwnedSuperTypeAssignment_4_1_1_1(), "rule__ClassCS__OwnedSuperTypeAssignment_4_1_1_1");
					put(grammarAccess.getClassCSAccess().getOwnedPropertyAssignment_5_1_0_0(), "rule__ClassCS__OwnedPropertyAssignment_5_1_0_0");
					put(grammarAccess.getClassCSAccess().getOwnedOperationAssignment_5_1_0_1(), "rule__ClassCS__OwnedOperationAssignment_5_1_0_1");
					put(grammarAccess.getClassCSAccess().getOwnedAnnotationAssignment_5_1_0_2(), "rule__ClassCS__OwnedAnnotationAssignment_5_1_0_2");
					put(grammarAccess.getTypedMultiplicityRefCSAccess().getMultiplicityAssignment_1(), "rule__TypedMultiplicityRefCS__MultiplicityAssignment_1");
					put(grammarAccess.getTypedTypeRefCSAccess().getPathNameAssignment(), "rule__TypedTypeRefCS__PathNameAssignment");
					put(grammarAccess.getClassifierPropertyCSAccess().getStereotypesAssignment_0(), "rule__ClassifierPropertyCS__StereotypesAssignment_0");
					put(grammarAccess.getClassifierPropertyCSAccess().getQualifierAssignment_1(), "rule__ClassifierPropertyCS__QualifierAssignment_1");
					put(grammarAccess.getClassifierPropertyCSAccess().getNameAssignment_2(), "rule__ClassifierPropertyCS__NameAssignment_2");
					put(grammarAccess.getClassifierPropertyCSAccess().getOwnedTypeAssignment_4(), "rule__ClassifierPropertyCS__OwnedTypeAssignment_4");
					put(grammarAccess.getClassifierPropertyCSAccess().getDefaultAssignment_5(), "rule__ClassifierPropertyCS__DefaultAssignment_5");
					put(grammarAccess.getClassifierPropertyCSAccess().getOppositeAssignment_6_2(), "rule__ClassifierPropertyCS__OppositeAssignment_6_2");
					put(grammarAccess.getStereotypeQualifierCSAccess().getStereotypeAssignment_1_0(), "rule__StereotypeQualifierCS__StereotypeAssignment_1_0");
					put(grammarAccess.getStereotypeQualifierCSAccess().getStereotypeAssignment_1_1_1(), "rule__StereotypeQualifierCS__StereotypeAssignment_1_1_1");
					put(grammarAccess.getMultiplicityCSAccess().getLowerBoundAssignment_1_0(), "rule__MultiplicityCS__LowerBoundAssignment_1_0");
					put(grammarAccess.getMultiplicityCSAccess().getUpperBoundAssignment_2(), "rule__MultiplicityCS__UpperBoundAssignment_2");
					put(grammarAccess.getClassifierOperationCSAccess().getStereotypesAssignment_0(), "rule__ClassifierOperationCS__StereotypesAssignment_0");
					put(grammarAccess.getClassifierOperationCSAccess().getQualifierAssignment_1(), "rule__ClassifierOperationCS__QualifierAssignment_1");
					put(grammarAccess.getClassifierOperationCSAccess().getNameAssignment_2(), "rule__ClassifierOperationCS__NameAssignment_2");
					put(grammarAccess.getClassifierOperationCSAccess().getOwnedParameterAssignment_4_0(), "rule__ClassifierOperationCS__OwnedParameterAssignment_4_0");
					put(grammarAccess.getClassifierOperationCSAccess().getOwnedParameterAssignment_4_1_1(), "rule__ClassifierOperationCS__OwnedParameterAssignment_4_1_1");
					put(grammarAccess.getClassifierOperationCSAccess().getOwnedTypeAssignment_6_1(), "rule__ClassifierOperationCS__OwnedTypeAssignment_6_1");
					put(grammarAccess.getEnumerationCSAccess().getNameAssignment_1(), "rule__EnumerationCS__NameAssignment_1");
					put(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsAssignment_2_1_0(), "rule__EnumerationCS__OwnedLiteralsAssignment_2_1_0");
					put(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsAssignment_2_1_1_1(), "rule__EnumerationCS__OwnedLiteralsAssignment_2_1_1_1");
					put(grammarAccess.getEnumerationLiteralCSAccess().getNameAssignment(), "rule__EnumerationLiteralCS__NameAssignment");
					put(grammarAccess.getTagCSAccess().getNameAssignment_1(), "rule__TagCS__NameAssignment_1");
					put(grammarAccess.getTagCSAccess().getPathNameAssignment_2(), "rule__TagCS__PathNameAssignment_2");
					put(grammarAccess.getTagCSAccess().getExpressionAssignment_3_1(), "rule__TagCS__ExpressionAssignment_3_1");
					put(grammarAccess.getTransformationDefCSAccess().getOwnedTypeAssignment_2(), "rule__TransformationDefCS__OwnedTypeAssignment_2");
					put(grammarAccess.getTransformationDefCSAccess().getOwnedPropertyAssignment_3(), "rule__TransformationDefCS__OwnedPropertyAssignment_3");
					put(grammarAccess.getTransformationDefCSAccess().getOwnedOperationAssignment_4(), "rule__TransformationDefCS__OwnedOperationAssignment_4");
					put(grammarAccess.getTransformationHeaderCSAccess().getNameAssignment_1(), "rule__TransformationHeaderCS__NameAssignment_1");
					put(grammarAccess.getModelTypeCSAccess().getNameAssignment_1(), "rule__ModelTypeCS__NameAssignment_1");
					put(grammarAccess.getModelTypeCSAccess().getComplianceKindCSAssignment_2(), "rule__ModelTypeCS__ComplianceKindCSAssignment_2");
					put(grammarAccess.getModelTypeCSAccess().getPackageRefsAssignment_4(), "rule__ModelTypeCS__PackageRefsAssignment_4");
					put(grammarAccess.getPackageRefCSAccess().getUriCSAssignment_0(), "rule__PackageRefCS__UriCSAssignment_0");
					put(grammarAccess.getPackageRefCSAccess().getPathNameCSAssignment_1_0(), "rule__PackageRefCS__PathNameCSAssignment_1_0");
					put(grammarAccess.getPackageRefCSAccess().getUriCSAssignment_1_1(), "rule__PackageRefCS__UriCSAssignment_1_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getNameAssignment_1(), "rule__MappingOperationHeaderCS__NameAssignment_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getSignatureAssignment_2(), "rule__MappingOperationHeaderCS__SignatureAssignment_2");
					put(grammarAccess.getListTypeCSAccess().getTypeAssignment_2(), "rule__ListTypeCS__TypeAssignment_2");
					put(grammarAccess.getDictTypeCSAccess().getKeyTypeAssignment_2(), "rule__DictTypeCS__KeyTypeAssignment_2");
					put(grammarAccess.getDictTypeCSAccess().getValueTypeAssignment_4(), "rule__DictTypeCS__ValueTypeAssignment_4");
					put(grammarAccess.getPrimaryExpCSAccess().getPathNameAssignment_10_1(), "rule__PrimaryExpCS__PathNameAssignment_10_1");
					put(grammarAccess.getPrimaryExpCSAccess().getFirstIndexesAssignment_10_2_0_2(), "rule__PrimaryExpCS__FirstIndexesAssignment_10_2_0_2");
					put(grammarAccess.getPrimaryExpCSAccess().getFirstIndexesAssignment_10_2_0_3_1(), "rule__PrimaryExpCS__FirstIndexesAssignment_10_2_0_3_1");
					put(grammarAccess.getPrimaryExpCSAccess().getSecondIndexesAssignment_10_2_0_5_1(), "rule__PrimaryExpCS__SecondIndexesAssignment_10_2_0_5_1");
					put(grammarAccess.getPrimaryExpCSAccess().getSecondIndexesAssignment_10_2_0_5_2_1(), "rule__PrimaryExpCS__SecondIndexesAssignment_10_2_0_5_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getAtPreAssignment_10_2_0_6_0(), "rule__PrimaryExpCS__AtPreAssignment_10_2_0_6_0");
					put(grammarAccess.getPrimaryExpCSAccess().getOwnedPartsAssignment_10_2_1_2_0_0(), "rule__PrimaryExpCS__OwnedPartsAssignment_10_2_1_2_0_0");
					put(grammarAccess.getPrimaryExpCSAccess().getOwnedPartsAssignment_10_2_1_2_0_1_1(), "rule__PrimaryExpCS__OwnedPartsAssignment_10_2_1_2_0_1_1");
					put(grammarAccess.getPrimaryExpCSAccess().getValueAssignment_10_2_1_2_1(), "rule__PrimaryExpCS__ValueAssignment_10_2_1_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getAtPreAssignment_10_2_2_0_0(), "rule__PrimaryExpCS__AtPreAssignment_10_2_2_0_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_10_2_2_1_2_0(), "rule__PrimaryExpCS__ArgumentAssignment_10_2_2_1_2_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_10_2_2_1_2_1(), "rule__PrimaryExpCS__ArgumentAssignment_10_2_2_1_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_10_2_2_1_2_2_0(), "rule__PrimaryExpCS__ArgumentAssignment_10_2_2_1_2_2_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_10_2_2_1_2_2_1(), "rule__PrimaryExpCS__ArgumentAssignment_10_2_2_1_2_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_10_2_2_1_2_3_0(), "rule__PrimaryExpCS__ArgumentAssignment_10_2_2_1_2_3_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_10_2_2_1_2_3_1(), "rule__PrimaryExpCS__ArgumentAssignment_10_2_2_1_2_3_1");
					put(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsAssignment_3_0(), "rule__ListLiteralExpCS__OwnedPartsAssignment_3_0");
					put(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsAssignment_3_1_1(), "rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1");
					put(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsAssignment_3_0(), "rule__DictLiteralExpCS__OwnedPartsAssignment_3_0");
					put(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsAssignment_3_1_1(), "rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1");
					put(grammarAccess.getDictLiteralPartCSAccess().getKeyAssignment_0(), "rule__DictLiteralPartCS__KeyAssignment_0");
					put(grammarAccess.getDictLiteralPartCSAccess().getValueAssignment_2(), "rule__DictLiteralPartCS__ValueAssignment_2");
					put(grammarAccess.getReturnExpCSAccess().getValueAssignment_2(), "rule__ReturnExpCS__ValueAssignment_2");
					put(grammarAccess.getModelAccess().getOwnedExpressionAssignment(), "rule__Model__OwnedExpressionAssignment");
					put(grammarAccess.getEssentialOCLUnaryOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLUnaryOperatorCS__NameAssignment");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLInfixOperatorCS__NameAssignment");
					put(grammarAccess.getEssentialOCLNavigationOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLNavigationOperatorCS__NameAssignment");
					put(grammarAccess.getPathNameCSAccess().getPathAssignment_0(), "rule__PathNameCS__PathAssignment_0");
					put(grammarAccess.getPathNameCSAccess().getPathAssignment_1_1(), "rule__PathNameCS__PathAssignment_1_1");
					put(grammarAccess.getFirstPathElementCSAccess().getElementAssignment(), "rule__FirstPathElementCS__ElementAssignment");
					put(grammarAccess.getNextPathElementCSAccess().getElementAssignment(), "rule__NextPathElementCS__ElementAssignment");
					put(grammarAccess.getURIPathNameCSAccess().getPathAssignment_0(), "rule__URIPathNameCS__PathAssignment_0");
					put(grammarAccess.getURIPathNameCSAccess().getPathAssignment_1_1(), "rule__URIPathNameCS__PathAssignment_1_1");
					put(grammarAccess.getURIFirstPathElementCSAccess().getElementAssignment_0(), "rule__URIFirstPathElementCS__ElementAssignment_0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getElementAssignment_1_1(), "rule__URIFirstPathElementCS__ElementAssignment_1_1");
					put(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment(), "rule__PrimitiveTypeCS__NameAssignment");
					put(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0(), "rule__CollectionTypeCS__NameAssignment_0");
					put(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1(), "rule__CollectionTypeCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundAssignment_0(), "rule__MultiplicityBoundsCS__LowerBoundAssignment_0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundAssignment_1_1(), "rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAssignment(), "rule__MultiplicityStringCS__StringBoundsAssignment");
					put(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0(), "rule__TupleTypeCS__NameAssignment_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_0(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1");
					put(grammarAccess.getTuplePartCSAccess().getNameAssignment_0(), "rule__TuplePartCS__NameAssignment_0");
					put(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2(), "rule__TuplePartCS__OwnedTypeAssignment_2");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeAssignment_0(), "rule__CollectionLiteralExpCS__OwnedTypeAssignment_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_0(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getExpressionCSAssignment_0(), "rule__CollectionLiteralPartCS__ExpressionCSAssignment_0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getLastExpressionCSAssignment_1_1(), "rule__CollectionLiteralPartCS__LastExpressionCSAssignment_1_1");
					put(grammarAccess.getConstructorPartCSAccess().getPropertyAssignment_0(), "rule__ConstructorPartCS__PropertyAssignment_0");
					put(grammarAccess.getConstructorPartCSAccess().getInitExpressionAssignment_2(), "rule__ConstructorPartCS__InitExpressionAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0(), "rule__TupleLiteralPartCS__NameAssignment_0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1(), "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionAssignment_3(), "rule__TupleLiteralPartCS__InitExpressionAssignment_3");
					put(grammarAccess.getNumberLiteralExpCSAccess().getNameAssignment(), "rule__NumberLiteralExpCS__NameAssignment");
					put(grammarAccess.getStringLiteralExpCSAccess().getNameAssignment(), "rule__StringLiteralExpCS__NameAssignment");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_0(), "rule__BooleanLiteralExpCS__NameAssignment_0");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_1(), "rule__BooleanLiteralExpCS__NameAssignment_1");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getMultiplicityAssignment_1(), "rule__TypeLiteralWithMultiplicityCS__MultiplicityAssignment_1");
					put(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment(), "rule__TypeLiteralExpCS__OwnedTypeAssignment");
					put(grammarAccess.getTypeNameExpCSAccess().getPathNameAssignment(), "rule__TypeNameExpCS__PathNameAssignment");
					put(grammarAccess.getTypeExpCSAccess().getMultiplicityAssignment_1(), "rule__TypeExpCS__MultiplicityAssignment_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_1(), "rule__ExpCS__OwnedOperatorAssignment_0_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_0(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_0");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_2_0_1_0(), "rule__ExpCS__OwnedOperatorAssignment_0_1_2_0_1_0");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_1_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_2_0_2_0(), "rule__ExpCS__OwnedOperatorAssignment_0_1_2_0_2_0");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_2_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_2_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_1_1(), "rule__ExpCS__OwnedOperatorAssignment_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_1_2(), "rule__ExpCS__OwnedExpressionAssignment_1_2");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedOperatorAssignment_0_1(), "rule__PrefixedExpCS__OwnedOperatorAssignment_0_1");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedExpressionAssignment_0_2(), "rule__PrefixedExpCS__OwnedExpressionAssignment_0_2");
					put(grammarAccess.getNavigatingArgCSAccess().getNameAssignment_0(), "rule__NavigatingArgCS__NameAssignment_0");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getNavigatingArgCSAccess().getInitAssignment_1_2_1(), "rule__NavigatingArgCS__InitAssignment_1_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingBarArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getNameAssignment_1(), "rule__NavigatingBarArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingBarArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingCommaArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getNameAssignment_1(), "rule__NavigatingCommaArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingCommaArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingSemiArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getNameAssignment_1(), "rule__NavigatingSemiArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingSemiArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getIfExpCSAccess().getConditionAssignment_1(), "rule__IfExpCS__ConditionAssignment_1");
					put(grammarAccess.getIfExpCSAccess().getThenExpressionAssignment_3(), "rule__IfExpCS__ThenExpressionAssignment_3");
					put(grammarAccess.getIfExpCSAccess().getElseExpressionAssignment_5(), "rule__IfExpCS__ElseExpressionAssignment_5");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_1(), "rule__LetExpCS__VariableAssignment_1");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_2_1(), "rule__LetExpCS__VariableAssignment_2_1");
					put(grammarAccess.getLetExpCSAccess().getInAssignment_4(), "rule__LetExpCS__InAssignment_4");
					put(grammarAccess.getLetVariableCSAccess().getNameAssignment_0(), "rule__LetVariableCS__NameAssignment_0");
					put(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_1_1(), "rule__LetVariableCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getLetVariableCSAccess().getInitExpressionAssignment_3(), "rule__LetVariableCS__InitExpressionAssignment_3");
					put(grammarAccess.getNestedExpCSAccess().getSourceAssignment_1(), "rule__NestedExpCS__SourceAssignment_1");
					put(grammarAccess.getQualifierAccess().getUnorderedGroup(), "rule__Qualifier__UnorderedGroup");
					put(grammarAccess.getFeatureQualifierAccess().getUnorderedGroup(), "rule__FeatureQualifier__UnorderedGroup");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser typedParser = (org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser) parser;
			typedParser.entryRuleTopLevelCS();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public QVTOperationalGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(QVTOperationalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
