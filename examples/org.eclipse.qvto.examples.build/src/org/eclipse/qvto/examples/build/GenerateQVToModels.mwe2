/**
 * <copyright>
 *
 * Copyright (c) 2011, 2013 Willink Transformations, University of Yok and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *		E.D.Willink - initial API and implementation
 *		Adoflo Sanchez-Barbudo Herrera - bug397429
 * 		
 * </copyright>
 *
 * 
 * Run As->MWE2 Workflow to regenerate QVTo models.
 */
module GenerateQVToModels

import org.eclipse.ocl.examples.build.utilities.*
import org.eclipse.ocl.examples.build.extenders.utilities.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.ecore.resource.impl.*

/**
 *	Generate the Pivot-based Models.
 */
var platformURI = ".."
var imperativeOCLslot = "imperativeOCLslot"
var imperativeOCLecore = "/org.eclipse.qvto.examples.pivot.imperativeocl/model/ImperativeOCL.ecore"
var imperativeOCLURI = "platform:/resource${imperativeOCLecore}"

Workflow {
	bean = ResourceSetImpl : resourceSet {}
//	bean = ProjectMapSetup { resourceSet = resourceSet }
    bean = StandaloneSetup { resourceSet = resourceSet
    	platformUri = platformURI		// A local folder to minimize workspace searching
    	scanClassPath = true		// But we do need to search the plugin-space
    }
    bean = GenModelSetup { resourceSet = resourceSet }
    bean = UMLGenModelSetup { resourceSet = resourceSet }
    
//    component = ResourceReader {
//		resourceSet = resourceSet
//		uri = imperativeOCLecore
//		modelSlot = imperativeOCLslot
//	}
	
    component = OCLExtenderVisitorPatternWeaverComponent {
    	resourceSet = resourceSet
    	uri = "/org.eclipse.qvto.examples.build/qvtoTransf/VisitorPatternTransf.qvto"
    	in = "/org.eclipse.qvto.examples.pivot.imperativeocl/model/ImperativeOCL.ecore" 
    	in = "/org.eclipse.ocl.examples.pivot/model/Pivot.ecore"
    	baseVisitorInterfaceName = "Visitor"
    	derivedVisitorInterfaceName = "ImperativeOCLVisitor"
    	derivedVisitorInterfaceQualifiedName = "org.eclipse.qvto.examples.pivot.imperativeocl.util.ImperativeOCLVisitor"
    }
    
    component = OCLExtenderVisitorPatternWeaverComponent {
    	resourceSet = resourceSet
    	uri = "/org.eclipse.qvto.examples.build/qvtoTransf/VisitorPatternTransf.qvto"
    	in = "/org.eclipse.qvto.examples.pivot.qvtoperational/model/QVTOperational.ecore" 
    	in = "/org.eclipse.qvto.examples.pivot.imperativeocl/model/ImperativeOCL.ecore"
    	baseVisitorInterfaceName = "ImperativeOCLVisitor"
    	derivedVisitorInterfaceName = "QVTOperationalVisitor"
    	derivedVisitorInterfaceQualifiedName = "org.eclipse.qvto.examples.pivot.qvtoperational.util.QVTOperationalVisitor"
    }
    
//    component = OCLExtenderVisitableAcceptGenerator {
//		resourceSet = resourceSet
//		targetEcoreFile = "/org.eclipse.qvto.examples.pivot.imperativeocl/model/ImperativeOCL.ecore"
//		visitorEcoreFile = "/org.eclipse.ocl.examples.pivot/model/Pivot.ecore"
//		derivedVisitorInterfaceName = "ImperativeOCLVisitor"
//	}
	
//	component = ResourceWriter {
//		resourceSet = resourceSet
//		modelSlot = imperativeOCLslot	
//	}

	
	component = GenerateModel { resourceSet = resourceSet skipOnErrors = true
		genModel = "/org.eclipse.qvto.examples.pivot.imperativeocl/model/ImperativeOCL.genmodel"
	}
	component = GenerateModel { resourceSet = resourceSet skipOnErrors = true
		genModel = "/org.eclipse.qvto.examples.pivot.qvtoperational/model/QVTOperational.genmodel" 	
	}

//    component = OCLExtenderVisitableAcceptGenerator { resourceSet = resourceSet skipOnErrors = true
//    	ecoreFile = "/org.eclipse.qvto.examples.pivot.imperativeocl/model/ImperativeOCL.ecore"
//    }
//    
//    component = OCLExtenderVisitableAcceptGenerator { resourceSet = resourceSet skipOnErrors = true
//    	ecoreFile = "/org.eclipse.qvto.examples.pivot.qvtoperational/model/QVTOperational.ecore"
//    }

	
//	component = ResourceReader { resourceSet = resourceSet skipOnErrors = true
//		modelSlot = "${slot}"
//		uri = "/org.eclipse.qvto.examples.pivot.imperativeocl/model/ImperativeOCL.ecore"
//	}
	
	
	
//	component = ResourceWriter {
//		modelSlot = "${slot}"		
//	}
    
    component = OCLExtenderVisitorsCodeGenerator { resourceSet = resourceSet	
    	ecoreFile = "/org.eclipse.qvto.examples.pivot.imperativeocl/model/ImperativeOCL.ecore"
    	javaFolder = "${platformURI}/org.eclipse.qvto.examples.pivot.imperativeocl/emf-gen"
    	javaPackageName = "org.eclipse.qvto.examples.pivot.imperativeocl"
    	modelPackageName = "org.eclipse.qvto.examples.pivot.imperativeocl"
    	visitorClassName = "ImperativeOCLVisitor"
    	visitorBasePackageName = "org.eclipse.ocl.examples.pivot.util"
    	visitorBaseClassName = "Visitor"
    }
    component = OCLExtenderVisitorsCodeGenerator { resourceSet = resourceSet
    	ecoreFile = "/org.eclipse.qvto.examples.pivot.qvtoperational/model/QVTOperational.ecore"
    	javaFolder = "${platformURI}/org.eclipse.qvto.examples.pivot.qvtoperational/emf-gen"
    	javaPackageName = "org.eclipse.qvto.examples.pivot.qvtoperational"
    	modelPackageName = "org.eclipse.qvto.examples.pivot.qvtoperational"
    	visitorClassName = "QVTOperationalVisitor"
    	visitorBasePackageName = "org.eclipse.qvto.examples.pivot.imperativeocl.util"
    	visitorBaseClassName = "ImperativeOCLVisitor"
    }
}

