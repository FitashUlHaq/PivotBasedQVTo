RULE_CMP_OP=10
T__29=29
T__28=28
T__27=27
T__26=26
RULE_ESCAPED_CHARACTER=17
T__25=25
RULE_ANY_OTHER=24
RULE_ESCAPED_ID=6
RULE_DOUBLE_QUOTED_STRING=19
T__93=93
T__94=94
T__91=91
T__92=92
T__90=90
RULE_RESOLVE_KIND=14
RULE_SIMPLE_ID=5
T__99=99
T__98=98
T__97=97
T__96=96
T__95=95
T__80=80
T__81=81
T__82=82
T__83=83
RULE_SINGLE_QUOTED_STRING=4
T__85=85
T__84=84
T__87=87
T__86=86
T__89=89
T__88=88
RULE_ML_COMMENT=21
RULE_LETTER_CHARACTER=18
T__71=71
T__72=72
T__70=70
T__76=76
T__75=75
T__74=74
T__73=73
T__79=79
T__78=78
T__77=77
RULE_UNARY_OP=16
T__68=68
T__69=69
T__66=66
T__67=67
T__64=64
T__65=65
T__62=62
T__63=63
RULE_RESOLVE_IN_KIND=13
T__61=61
T__60=60
T__55=55
T__56=56
T__57=57
T__58=58
T__51=51
T__52=52
T__53=53
T__54=54
T__107=107
T__108=108
T__109=109
T__59=59
T__103=103
T__104=104
T__105=105
T__106=106
T__111=111
T__110=110
RULE_INT=7
T__112=112
RULE_SIMPLE_ITERATOR_OP=15
T__50=50
T__42=42
T__43=43
T__40=40
RULE_ML_SINGLE_QUOTED_STRING=20
T__41=41
T__46=46
T__47=47
T__44=44
T__45=45
RULE_MULT_OP=11
T__48=48
T__49=49
RULE_ACCESS_OP=8
T__102=102
T__101=101
T__100=100
RULE_MULTI_ITERATOR_OP=12
RULE_SL_COMMENT=22
T__30=30
T__31=31
T__32=32
T__33=33
T__34=34
T__35=35
T__36=36
T__37=37
RULE_ASSIGN_OP=9
T__38=38
T__39=39
RULE_WS=23
'out'=112
'>='=71
'~'=48
'primitive'=42
'/'=67
'Sequence'=91
'then'=101
':='=107
'Real'=83
'>'=69
'Integer'=82
';'=33
'Boolean'=81
'return'=64
'<>'=73
'OclInvalid'=87
'transformation'=59
'blackbox'=25
'+'=68
'.'=37
'pre'=63
'opposites'=47
'Set'=89
'import'=32
'>>'=50
'static'=27
'true'=95
'else'=102
'extends'=44
'let'=104
'and'=74
'readonly'=30
'{'=39
'...'=52
'package'=110
'OclVoid'=88
'if'=100
':'=38
'('=54
'not'=66
'derived'=31
'-'=65
','=35
'in'=105
']'=53
'..'=94
'references'=29
'enum'=56
'|'=99
'::='=108
'class'=46
'OrderedSet'=93
'exception'=43
'UnlimitedNatural'=85
'intermediate'=45
'null'=98
'datatype'=41
'Collection'=92
'Tuple'=79
'String'=84
'='=58
'Dict'=61
'@'=62
'Bag'=90
'::'=80
')'=55
'xor'=76
'->'=78
'}'=40
'abstract'=26
'inout'=111
'tag'=57
'metamodel'=109
'composes'=28
'<<'=49
'<='=72
'false'=96
'List'=60
'<'=70
'invalid'=97
'OclAny'=86
'or'=75
'*'=36
'['=51
'implies'=77
'self'=106
'endif'=103
'from'=34
