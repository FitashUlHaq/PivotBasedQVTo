modeltype ecore uses 'http://www.eclipse.org/emf/2002/Ecore';
modeltype Test uses Test('m2m.qvto.ocl.annotation');
	 
transformation OclAnnotation(in inModel : ecore, out outModel : Test); 

main() {

	var superFoo := object SuperFoo { 
		firstName :='SuperFoo';
		lastName:= 'Smith';
	};
	
	var foo := object Foo { 
		firstName :='Foo';
		lastName:= 'Smith';
	};
	
	var subFoo : SubFoo := object SubFoo {
		firstName :='SubFoo';
		lastName:= 'Smith';
	};

	var root : Root := object Root {
		foos += superFoo;
		foos += foo;
		foos += subFoo;
	
		results += object TestResult {
			name := 'derivedPropertyAccess';
			values += Sequence {
				foo.fullName,
				subFoo.oclAsType(Foo).fullName,
				subFoo.fullName,				
				subFoo.testOperResultProperty				
			} 
		};

		results += object TestResult {
			name := 'SuperFoo::bodyOperationAccess';
			
			values += Sequence {
				superFoo.testOper(''),				
				superFoo.testOper(subFoo)	
			} 			
		};
		
		results += object TestResult {
			name := 'Foo::bodyOperationAccess';
			
			values += Sequence {
				foo.oclAsType(SuperFoo).testOper(subFoo),		
				foo.testOper(subFoo),
				
				foo.oclAsType(SuperFoo).testOper(''),	
				foo.testOper('')			
			} 			
		};		
	
		results += object TestResult {
			name := 'SubFoo::bodyOperationAccess';
			values += Sequence {
				subFoo.oclAsType(SuperFoo).testOper(subFoo),
				subFoo.oclAsType(Foo).testOper(subFoo),	
				subFoo.testOper(subFoo),

				subFoo.oclAsType(SuperFoo).testOper(''),
				subFoo.oclAsType(Foo).testOper(''),	
				subFoo.testOper('')		
			} 
		};
	}	
}
